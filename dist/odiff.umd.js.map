{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 17d780fbf58020258f90","webpack:///./odiff/odiff.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC;AACpC;AACA,qBAAqB;AACrB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,mDAAmD;AACnD;AACA;AACA,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,iBAAiB,gCAAgC;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA,SAAS,oBAAoB;AAC7B;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA,wBAAwB;AACxB,aAAa;AACb,wBAAwB;AACxB;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,2BAA2B,kBAAkB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"odiff.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"odiff\"] = factory();\n\telse\n\t\troot[\"odiff\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 17d780fbf58020258f90","\"use strict\";\n\n/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\n// gets the changes that need to happen to a to change it into b\n// returns an object with the members\n// type\n// property\n// value\n// values\n// count\nvar getAllDiff = false\nmodule.exports = function (a, b, allSimilar = false) {\n    var results = []\n    getAllDiff = allSimilar\n    diffInternal(a, b, results, [])\n    return results\n}\n\nvar diffInternal = function (a, b, acc, base) {\n    if (a === b || Number.isNaN(a) && Number.isNaN(b)) {\n        return;\n    } else if (a instanceof Array && b instanceof Array) {\n        var an = a.length - 1, bn = b.length - 1\n        while (an >= 0 && bn >= 0) {     // Loop backwards (so that making changes in order will work correctly).\n            if (equal(a[an], b[bn])) {\n                an--; bn--;\n            } else {\n                var indexes = findMatchIndexes(equal, a, b, an, bn, 0, 0)\n\n                // Loop backwards from the point at which the lists are not equal and find which elements can be matched\n                // as similar or can be expressed as additions, changes, or removals.\n                var anInner = an, bnInner = bn\n                while (anInner > indexes.a && bnInner > indexes.b) {\n                    if (similar(a[anInner], b[bnInner])) {\n                        // get change for that element\n                        diffInternal(a[anInner], b[bnInner], acc, base.concat([anInner]))\n                        anInner--; bnInner--;\n                    } else {\n                        var indexesInner = findMatchIndexes(similar, a, b, anInner, bnInner, indexes.a + 1, indexes.b + 1)\n\n                        var numberPulled = anInner - indexesInner.a\n                        var numberPushed = bnInner - indexesInner.b\n\n                        if (numberPulled === 1 && numberPushed === 1) {\n                            set(acc, base.concat(indexesInner.a + 1), b[indexesInner.b + 1]) // set the one\n                        } else if (numberPulled === 1 && numberPushed === 2) {\n                            // set one, push the other\n                            add(acc, base, indexesInner.a + 2, b.slice(indexesInner.b + 2, bnInner + 1))\n                            set(acc, base.concat(indexesInner.a + 1), b[indexesInner.b + 1])\n                        } else if (numberPulled === 2 && numberPushed === 1) {\n                            // set one, pull the other\n                            rm(acc, base, indexesInner.a + 2, 1, a)\n                            set(acc, base.concat(indexesInner.a + 1), b[indexesInner.b + 1])\n                        } else if (numberPulled === 2 && numberPushed === 2) {\n                            set(acc, base.concat(indexesInner.a + 2), b[indexesInner.b + 2])\n                            set(acc, base.concat(indexesInner.a + 1), b[indexesInner.b + 1])\n                        } else {\n                            if (numberPulled > 0) { // if there were some elements pulled\n                                rm(acc, base, indexesInner.a + 1, numberPulled, a)\n                            }\n                            if (numberPushed > 0) { // if there were some elements pushed\n                                add(acc, base, indexesInner.a + 1, b.slice(indexesInner.b + 1, bnInner + 1))\n                            }\n                        }\n\n                        anInner = indexesInner.a\n                        bnInner = indexesInner.b\n                    }\n                }\n                if (anInner > indexes.a) {        // more to pull\n                    rm(acc, base, indexes.a + 1, anInner - indexes.a, a)\n                } else if (bnInner > indexes.b) { // more to push\n                    add(acc, base, anInner + 1, b.slice(indexes.b + 1, bnInner + 1))\n                }\n\n                an = indexes.a\n                bn = indexes.b\n            }\n        }\n\n        if (an >= 0) {        // more to pull\n            rm(acc, base, 0, an + 1, a)\n        } else if (bn >= 0) { // more to push\n            add(acc, base, 0, b.slice(0, bn + 1))\n        }\n\n    } else if (a instanceof Date && b instanceof Date) {\n        if (a.getTime() !== b.getTime()) {\n            set(acc, base, b)\n        }\n    } else if (a instanceof Object && b instanceof Object) {\n        var keyMap = merge(arrayToMap(Object.keys(a)), arrayToMap(Object.keys(b)))\n        for (var key in keyMap) {\n            var path = base.concat([key])\n            if (key in a && !(key in b)) {\n                unset(acc, path)\n            } else {\n                diffInternal(a[key], b[key], acc, path)\n            }\n        }\n    } else {\n        set(acc, base, b)\n    }\n\n    // adds a 'set' type to the changeList\n    function set(changeList, property, value) {\n        changeList.push({\n            type: 'set',\n            path: property,\n            val: value\n        })\n    }\n\n    // adds an 'unset' type to the changeList\n    function unset(changeList, property) {\n        changeList.push({\n            type: 'unset',\n            path: property\n        })\n    }\n\n    // Adds an 'rm' type to the changeList.\n    // index - The index to remove at.\n    // count - The number of items to remove from that index. The indexes to remove count up from the index.\n    function rm(changeList, property, index, count, a) {\n        var finalIndex =\n            changeList.push({\n                type: 'rm',\n                path: property,\n                index: index,\n                num: count,\n                vals: a.slice(index, index + count)\n            })\n    }\n\n    // adds an 'add' type to the changeList\n    function add(changeList, property, index, values) {\n        changeList.push({\n            type: 'add',\n            path: property,\n            index: index,\n            vals: values\n        })\n    }\n}\n\nmodule.exports.similar = similar\nmodule.exports.equal = equal\n\n\n// Finds and returns the closest indexes in a and b that match starting with divergenceIndex\n// Note: loops backwards like the rest of this stuff\n// Returns the index beyond the first element (aSubMin-1 or bSubMin-1) for each if there is no match\n// Parameters:\n// compareFn - determines what matches (returns true if the arguments match)\n// a,b - two arrays to compare\n// divergenceIndexA,divergenceIndexB - the two positions of a and b to start comparing from\n// aSubMin,bSubMin - the two positions to compare until\nfunction findMatchIndexes(compareFn, a, b, divergenceIndexA, divergenceIndexB, aSubMin, bSubMin) {\n    var maxNForA = divergenceIndexA - aSubMin\n    var maxNForB = divergenceIndexB - bSubMin\n    var maxN = Math.max(maxNForA, maxNForB)\n    for (var n = 1; n <= maxN; n++) {\n        var newestA = a[divergenceIndexA - n] // the current item farthest from the divergence index being compared\n        var newestB = b[divergenceIndexB - n]\n\n        if (n <= maxNForB && n <= maxNForA && compareFn(newestA, newestB)) {\n            return { a: divergenceIndexA - n, b: divergenceIndexB - n }\n        }\n\n        for (var j = 0; j < n; j++) {\n            var elemA = a[divergenceIndexA - j] // an element between the divergence index and the newest items\n            var elemB = b[divergenceIndexB - j]\n\n            if (n <= maxNForB && compareFn(elemA, newestB)) {\n                return { a: divergenceIndexA - j, b: divergenceIndexB - n }\n            } else if (n <= maxNForA && compareFn(newestA, elemB)) {\n                return { a: divergenceIndexA - n, b: divergenceIndexB - j }\n            }\n        }\n    }\n    // else\n    return { a: aSubMin - 1, b: bSubMin - 1 }\n}\n\n\n// compares arrays and objects and returns true if they're similar meaning:\n// less than 2 changes, or\n// less than 10% different members\nfunction similar(a, b) {\n    if (a instanceof Array) {\n        if (!(b instanceof Array))\n            return false\n        var tenPercent = a.length / 10\n        var conditions = !getAllDiff ? (notEqual >= 2 && notEqual > tenPercent) : notEqual >= 0\n        var notEqual = Math.abs(a.length - b.length) // initialize with the length difference\n        for (var n = 0; n < a.length; n++) {\n            if (equal(a[n], b[n])) {\n                if (conditions || notEqual === a.length) {\n                    return false\n                }\n\n                notEqual++\n            }\n        }\n        // else\n        return true\n\n    } else if (a instanceof Object) {\n        if (!(b instanceof Object))\n            return false\n\n        var keyMap = merge(arrayToMap(Object.keys(a)), arrayToMap(Object.keys(b)))\n        var keyLength = Object.keys(keyMap).length\n        var tenPercent = keyLength / 10\n        var conditions = !getAllDiff ? (notEqual >= 2 && notEqual > tenPercent) : notEqual >= 0;\n        var notEqual = 0\n        for (var key in keyMap) {\n            var aVal = a[key]\n            var bVal = b[key]\n\n            if (!equal(aVal, bVal)) {\n                if (conditions || notEqual + 1 === keyLength) {\n                    return false\n                }\n\n                notEqual++\n            }\n        }\n        // else\n        return true\n\n    } else {\n        return a === b || Number.isNaN(a) && Number.isNaN(b)\n    }\n}\n\n// compares arrays and objects for value equality (all elements and members must match)\nfunction equal(a, b) {\n    if (a instanceof Array) {\n        if (!(b instanceof Array))\n            return false\n        if (a.length !== b.length) {\n            return false\n        } else {\n            for (var n = 0; n < a.length; n++) {\n                if (!equal(a[n], b[n])) {\n                    return false\n                }\n            }\n            // else\n            return true\n        }\n    } else if (a instanceof Object) {\n        if (!(b instanceof Object))\n            return false\n\n        var aKeys = Object.keys(a)\n        var bKeys = Object.keys(b)\n\n        if (aKeys.length !== bKeys.length) {\n            return false\n        } else {\n            for (var n = 0; n < aKeys.length; n++) {\n                var key = aKeys[n]\n                var aVal = a[key]\n                var bVal = b[key]\n\n                if (!equal(aVal, bVal)) {\n                    return false\n                }\n            }\n            // else\n            return true\n        }\n    } else {\n        return a === b || Number.isNaN(a) && Number.isNaN(b)\n    }\n}\n\n\n// turns an array of values into a an object where those values are all keys that point to 'true'\nfunction arrayToMap(array) {\n    var result = {}\n    array.forEach(function (v) {\n        result[v] = true\n    })\n    return result\n}\n\n// Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n// returns obj1 (now mutated)\nfunction merge(obj1, obj2) {\n    for (var key in obj2) {\n        obj1[key] = obj2[key]\n    }\n\n    return obj1\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./odiff/odiff.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}